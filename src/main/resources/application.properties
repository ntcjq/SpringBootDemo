#加上项目名称
#server.context-path=/boot
server.port=8888

prj.title=springbootdemo
#分享生活和技术
prj.description=\u5206\u4eab\u751f\u6d3b\u548c\u6280\u672f





###FREEMARKER (FreeMarkerAutoConfiguration)
spring.freemarker.allow-request-override=false
spring.freemarker.cache=true
spring.freemarker.check-template-location=true
spring.freemarker.charset=UTF-8
spring.freemarker.content-type=text/html
spring.freemarker.expose-request-attributes=true
spring.freemarker.expose-session-attributes=false
spring.freemarker.expose-spring-macro-helpers=false
#spring.freemarker.prefix=
spring.freemarker.request-context-attribute=rc
#spring.freemarker.settings.*=
#模板加载后缀
spring.freemarker.suffix=.html
#模板加载路径,非templates目录是需要指定模板路径的，thymeleaf默认的前缀是templat
spring.freemarker.template-loader-path=classpath:/views/

#日志配置
logging.path=D:\\data\\logs
logging.level.com.favorites=DEBUG
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=ERROR

#mybatis
mybatis.config-locations=classpath:mybatis/mybatis-config.xml
mybatis.type-aliases-package=com.cjq.SpringBootDemo.domain
mybatis.mapper-locations=classpath:mybatis/mapper/*.xml

#数据库连接  默认
#spring.datasource.driverClassName = com.mysql.jdbc.Driver
#spring.datasource.url = jdbc:mysql://localhost:3306/springboot?useUnicode=true&characterEncoding=utf-8
#spring.datasource.username = root
#spring.datasource.password = root

#数据库连接  默认
spring.datasource.default.url = jdbc:mysql://localhost:3306/springboot?useUnicode=true&characterEncoding=utf-8
spring.datasource.default.username = root
spring.datasource.default.password = root
#数据库连接  第二个库
spring.datasource.two.url = jdbc:mysql://localhost:3306/daily?useUnicode=true&characterEncoding=utf-8
spring.datasource.two.username = root
spring.datasource.two.password = root


###################以下为druid增加的配置###########################
########################监控访问地址        http://localhost:8888/druid/login.html  ######################################
spring.datasource.druid.type=com.alibaba.druid.pool.DruidDataSource
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最大，最小
spring.datasource.druid.initialSize=5
spring.datasource.druid.maxActive=20
spring.datasource.druid.minIdle=5
# 配置获取连接等待超时的时间
spring.datasource.druid.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.minEvictableIdleTimeMillis=300000
spring.datasource.druid.validationQuery=SELECT 1 FROM DUAL
spring.datasource.druid.testWhileIdle=true
spring.datasource.druid.testOnBorrow=false
spring.datasource.druid.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.druid.poolPreparedStatements=true
spring.datasource.druid.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.druid.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
#spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true
###############以上为配置druid添加的配置########################################

###############jta配置###################
spring.jta.log-dir = D:/data/logs/tx
spring.jta.transaction-manager-id = txManager


#############邮件相关################
spring.mail.host=smtp.qq.com
spring.mail.username=754119493@qq.com
spring.mail.password=xzpxffawjhwvbedf
spring.mail.default-encoding=UTF-8
#自定义的谁来发送邮件
mail.fromMail.addr=754119493@qq.com